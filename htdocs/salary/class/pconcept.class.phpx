<?php
/* Copyright (C) 2007-2012 Laurent Destailleur  <eldy@users.sourceforge.net>
 * Copyright (C) ---Put here your own copyright and developer email---
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *  \file       dev/skeletons/pconcept.class.php
 *  \ingroup    mymodule othermodule1 othermodule2
 *  \brief      This file is an example for a CRUD class file (Create/Read/Update/Delete)
 *				Initialy built by build_class_from_table on 2013-07-24 17:21
 */

// Put here all includes required by your class file
//require_once(DOL_DOCUMENT_ROOT."/core/class/commonobject.class.php");
//require_once(DOL_DOCUMENT_ROOT."/societe/class/societe.class.php");
//require_once(DOL_DOCUMENT_ROOT."/product/class/product.class.php");


/**
 *	Put here description of your class
 */
class Pconcept // extends CommonObject
{
	var $db;							//!< To store db handler
	var $error;							//!< To return error code (or message)
	var $errors=array();				//!< To return several error codes (or messages)
	//var $element='pconcept';			//!< Id that identify managed objects
	//var $table_element='pconcept';	//!< Name of table without prefix where object is stored

    var $id;
    
	var $ref;
	var $detail;
	var $details;
	var $type_cod;
	var $type_mov;
	var $fk_formula;
	var $calc_oblig;
	var $calc_afp;
	var $calc_rciva;
	var $calc_agui;
	var $calc_vac;
	var $calc_indem;
	var $calc_afpvejez;
	var $calc_contrpat;
	var $calc_afpriesgo;
	var $calc_aportsol;
	var $calc_quin;
	var $print;
	var $fk_codfol;
	var $income_tax;
	var $percent;

    


    /**
     *  Constructor
     *
     *  @param	DoliDb		$db      Database handler
     */
    function __construct($db)
    {
        $this->db = $db;
        return 1;
    }


    /**
     *  Create object into database
     *
     *  @param	User	$user        User that creates
     *  @param  int		$notrigger   0=launch triggers after, 1=disable triggers
     *  @return int      		   	 <0 if KO, Id of created object if OK
     */
    function create($user, $notrigger=0)
    {
    	global $conf, $langs;
		$error=0;

		// Clean parameters
        
		if (isset($this->ref)) $this->ref=trim($this->ref);
		if (isset($this->detail)) $this->detail=trim($this->detail);
		if (isset($this->details)) $this->details=trim($this->details);
		if (isset($this->type_cod)) $this->type_cod=trim($this->type_cod);
		if (isset($this->type_mov)) $this->type_mov=trim($this->type_mov);
		if (isset($this->fk_formula)) $this->fk_formula=trim($this->fk_formula);
		if (isset($this->calc_oblig)) $this->calc_oblig=trim($this->calc_oblig);
		if (isset($this->calc_afp)) $this->calc_afp=trim($this->calc_afp);
		if (isset($this->calc_rciva)) $this->calc_rciva=trim($this->calc_rciva);
		if (isset($this->calc_agui)) $this->calc_agui=trim($this->calc_agui);
		if (isset($this->calc_vac)) $this->calc_vac=trim($this->calc_vac);
		if (isset($this->calc_indem)) $this->calc_indem=trim($this->calc_indem);
		if (isset($this->calc_afpvejez)) $this->calc_afpvejez=trim($this->calc_afpvejez);
		if (isset($this->calc_contrpat)) $this->calc_contrpat=trim($this->calc_contrpat);
		if (isset($this->calc_afpriesgo)) $this->calc_afpriesgo=trim($this->calc_afpriesgo);
		if (isset($this->calc_aportsol)) $this->calc_aportsol=trim($this->calc_aportsol);
		if (isset($this->calc_quin)) $this->calc_quin=trim($this->calc_quin);
		if (isset($this->print)) $this->print=trim($this->print);
		if (isset($this->fk_codfol)) $this->fk_codfol=trim($this->fk_codfol);
		if (isset($this->income_tax)) $this->income_tax=trim($this->income_tax);
		if (isset($this->percent)) $this->percent=trim($this->percent);

        

		// Check parameters
		// Put here code to add control on parameters values

        // Insert request
		$sql = "INSERT INTO ".MAIN_DB_PREFIX."p_concept(";
		
		$sql.= "ref,";
		$sql.= "detail,";
		$sql.= "details,";
		$sql.= "type_cod,";
		$sql.= "type_mov,";
		$sql.= "fk_formula,";
		$sql.= "calc_oblig,";
		$sql.= "calc_afp,";
		$sql.= "calc_rciva,";
		$sql.= "calc_agui,";
		$sql.= "calc_vac,";
		$sql.= "calc_indem,";
		$sql.= "calc_afpvejez,";
		$sql.= "calc_contrpat,";
		$sql.= "calc_afpriesgo,";
		$sql.= "calc_aportsol,";
		$sql.= "calc_quin,";
		$sql.= "print,";
		$sql.= "fk_codfol,";
		$sql.= "income_tax,";
		$sql.= "percent";

		
        $sql.= ") VALUES (";
        
		$sql.= " ".(! isset($this->ref)?'NULL':"'".$this->db->escape($this->ref)."'").",";
		$sql.= " ".(! isset($this->detail)?'NULL':"'".$this->db->escape($this->detail)."'").",";
		$sql.= " ".(! isset($this->details)?'NULL':"'".$this->db->escape($this->details)."'").",";
		$sql.= " ".(! isset($this->type_cod)?'NULL':"'".$this->type_cod."'").",";
		$sql.= " ".(! isset($this->type_mov)?'NULL':"'".$this->type_mov."'").",";
		$sql.= " ".(! isset($this->fk_formula)?'NULL':"'".$this->fk_formula."'").",";
		$sql.= " ".(! isset($this->calc_oblig)?'NULL':"'".$this->calc_oblig."'").",";
		$sql.= " ".(! isset($this->calc_afp)?'NULL':"'".$this->calc_afp."'").",";
		$sql.= " ".(! isset($this->calc_rciva)?'NULL':"'".$this->calc_rciva."'").",";
		$sql.= " ".(! isset($this->calc_agui)?'NULL':"'".$this->calc_agui."'").",";
		$sql.= " ".(! isset($this->calc_vac)?'NULL':"'".$this->calc_vac."'").",";
		$sql.= " ".(! isset($this->calc_indem)?'NULL':"'".$this->calc_indem."'").",";
		$sql.= " ".(! isset($this->calc_afpvejez)?'NULL':"'".$this->calc_afpvejez."'").",";
		$sql.= " ".(! isset($this->calc_contrpat)?'NULL':"'".$this->calc_contrpat."'").",";
		$sql.= " ".(! isset($this->calc_afpriesgo)?'NULL':"'".$this->calc_afpriesgo."'").",";
		$sql.= " ".(! isset($this->calc_aportsol)?'NULL':"'".$this->calc_aportsol."'").",";
		$sql.= " ".(! isset($this->calc_quin)?'NULL':"'".$this->calc_quin."'").",";
		$sql.= " ".(! isset($this->print)?'NULL':"'".$this->print."'").",";
		$sql.= " ".(! isset($this->fk_codfol)?'NULL':"'".$this->fk_codfol."'").",";
		$sql.= " ".(! isset($this->income_tax)?'NULL':"'".$this->income_tax."'").",";
		$sql.= " ".(! isset($this->percent)?'NULL':"'".$this->percent."'")."";

        
		$sql.= ")";

		$this->db->begin();

	   	dol_syslog(get_class($this)."::create sql=".$sql, LOG_DEBUG);
        $resql=$this->db->query($sql);
    	if (! $resql) { $error++; $this->errors[]="Error ".$this->db->lasterror(); }

		if (! $error)
        {
            $this->id = $this->db->last_insert_id(MAIN_DB_PREFIX."p_concept");

			if (! $notrigger)
			{
	            // Uncomment this and change MYOBJECT to your own tag if you
	            // want this action calls a trigger.

	            //// Call triggers
	            //include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';
	            //$interface=new Interfaces($this->db);
	            //$result=$interface->run_triggers('MYOBJECT_CREATE',$this,$user,$langs,$conf);
	            //if ($result < 0) { $error++; $this->errors=$interface->errors; }
	            //// End call triggers
			}
        }

        // Commit or rollback
        if ($error)
		{
			foreach($this->errors as $errmsg)
			{
	            dol_syslog(get_class($this)."::create ".$errmsg, LOG_ERR);
	            $this->error.=($this->error?', '.$errmsg:$errmsg);
			}
			$this->db->rollback();
			return -1*$error;
		}
		else
		{
			$this->db->commit();
            return $this->id;
		}
    }


    /**
     *  Load object in memory from the database
     *
     *  @param	int		$id    Id object
     *  @return int          	<0 if KO, >0 if OK
     */
    function fetch($id)
    {
    	global $langs;
        $sql = "SELECT";
		$sql.= " t.rowid,";
		
		$sql.= " t.ref,";
		$sql.= " t.detail,";
		$sql.= " t.details,";
		$sql.= " t.type_cod,";
		$sql.= " t.type_mov,";
		$sql.= " t.fk_formula,";
		$sql.= " t.calc_oblig,";
		$sql.= " t.calc_afp,";
		$sql.= " t.calc_rciva,";
		$sql.= " t.calc_agui,";
		$sql.= " t.calc_vac,";
		$sql.= " t.calc_indem,";
		$sql.= " t.calc_afpvejez,";
		$sql.= " t.calc_contrpat,";
		$sql.= " t.calc_afpriesgo,";
		$sql.= " t.calc_aportsol,";
		$sql.= " t.calc_quin,";
		$sql.= " t.print,";
		$sql.= " t.fk_codfol,";
		$sql.= " t.income_tax,";
		$sql.= " t.percent";

		
        $sql.= " FROM ".MAIN_DB_PREFIX."p_concept as t";
        $sql.= " WHERE t.rowid = ".$id;

    	dol_syslog(get_class($this)."::fetch sql=".$sql, LOG_DEBUG);
        $resql=$this->db->query($sql);
        if ($resql)
        {
            if ($this->db->num_rows($resql))
            {
                $obj = $this->db->fetch_object($resql);

                $this->id    = $obj->rowid;
                
				$this->ref = $obj->ref;
				$this->detail = $obj->detail;
				$this->details = $obj->details;
				$this->type_cod = $obj->type_cod;
				$this->type_mov = $obj->type_mov;
				$this->fk_formula = $obj->fk_formula;
				$this->calc_oblig = $obj->calc_oblig;
				$this->calc_afp = $obj->calc_afp;
				$this->calc_rciva = $obj->calc_rciva;
				$this->calc_agui = $obj->calc_agui;
				$this->calc_vac = $obj->calc_vac;
				$this->calc_indem = $obj->calc_indem;
				$this->calc_afpvejez = $obj->calc_afpvejez;
				$this->calc_contrpat = $obj->calc_contrpat;
				$this->calc_afpriesgo = $obj->calc_afpriesgo;
				$this->calc_aportsol = $obj->calc_aportsol;
				$this->calc_quin = $obj->calc_quin;
				$this->print = $obj->print;
				$this->fk_codfol = $obj->fk_codfol;
				$this->income_tax = $obj->income_tax;
				$this->percent = $obj->percent;

                
            }
            $this->db->free($resql);

            return 1;
        }
        else
        {
      	    $this->error="Error ".$this->db->lasterror();
            dol_syslog(get_class($this)."::fetch ".$this->error, LOG_ERR);
            return -1;
        }
    }


    /**
     *  Update object into database
     *
     *  @param	User	$user        User that modifies
     *  @param  int		$notrigger	 0=launch triggers after, 1=disable triggers
     *  @return int     		   	 <0 if KO, >0 if OK
     */
    function update($user=0, $notrigger=0)
    {
    	global $conf, $langs;
		$error=0;

		// Clean parameters
        
		if (isset($this->ref)) $this->ref=trim($this->ref);
		if (isset($this->detail)) $this->detail=trim($this->detail);
		if (isset($this->details)) $this->details=trim($this->details);
		if (isset($this->type_cod)) $this->type_cod=trim($this->type_cod);
		if (isset($this->type_mov)) $this->type_mov=trim($this->type_mov);
		if (isset($this->fk_formula)) $this->fk_formula=trim($this->fk_formula);
		if (isset($this->calc_oblig)) $this->calc_oblig=trim($this->calc_oblig);
		if (isset($this->calc_afp)) $this->calc_afp=trim($this->calc_afp);
		if (isset($this->calc_rciva)) $this->calc_rciva=trim($this->calc_rciva);
		if (isset($this->calc_agui)) $this->calc_agui=trim($this->calc_agui);
		if (isset($this->calc_vac)) $this->calc_vac=trim($this->calc_vac);
		if (isset($this->calc_indem)) $this->calc_indem=trim($this->calc_indem);
		if (isset($this->calc_afpvejez)) $this->calc_afpvejez=trim($this->calc_afpvejez);
		if (isset($this->calc_contrpat)) $this->calc_contrpat=trim($this->calc_contrpat);
		if (isset($this->calc_afpriesgo)) $this->calc_afpriesgo=trim($this->calc_afpriesgo);
		if (isset($this->calc_aportsol)) $this->calc_aportsol=trim($this->calc_aportsol);
		if (isset($this->calc_quin)) $this->calc_quin=trim($this->calc_quin);
		if (isset($this->print)) $this->print=trim($this->print);
		if (isset($this->fk_codfol)) $this->fk_codfol=trim($this->fk_codfol);
		if (isset($this->income_tax)) $this->income_tax=trim($this->income_tax);
		if (isset($this->percent)) $this->percent=trim($this->percent);

        

		// Check parameters
		// Put here code to add a control on parameters values

        // Update request
        $sql = "UPDATE ".MAIN_DB_PREFIX."p_concept SET";
        
		$sql.= " ref=".(isset($this->ref)?"'".$this->db->escape($this->ref)."'":"null").",";
		$sql.= " detail=".(isset($this->detail)?"'".$this->db->escape($this->detail)."'":"null").",";
		$sql.= " details=".(isset($this->details)?"'".$this->db->escape($this->details)."'":"null").",";
		$sql.= " type_cod=".(isset($this->type_cod)?$this->type_cod:"null").",";
		$sql.= " type_mov=".(isset($this->type_mov)?$this->type_mov:"null").",";
		$sql.= " fk_formula=".(isset($this->fk_formula)?$this->fk_formula:"null").",";
		$sql.= " calc_oblig=".(isset($this->calc_oblig)?$this->calc_oblig:"null").",";
		$sql.= " calc_afp=".(isset($this->calc_afp)?$this->calc_afp:"null").",";
		$sql.= " calc_rciva=".(isset($this->calc_rciva)?$this->calc_rciva:"null").",";
		$sql.= " calc_agui=".(isset($this->calc_agui)?$this->calc_agui:"null").",";
		$sql.= " calc_vac=".(isset($this->calc_vac)?$this->calc_vac:"null").",";
		$sql.= " calc_indem=".(isset($this->calc_indem)?$this->calc_indem:"null").",";
		$sql.= " calc_afpvejez=".(isset($this->calc_afpvejez)?$this->calc_afpvejez:"null").",";
		$sql.= " calc_contrpat=".(isset($this->calc_contrpat)?$this->calc_contrpat:"null").",";
		$sql.= " calc_afpriesgo=".(isset($this->calc_afpriesgo)?$this->calc_afpriesgo:"null").",";
		$sql.= " calc_aportsol=".(isset($this->calc_aportsol)?$this->calc_aportsol:"null").",";
		$sql.= " calc_quin=".(isset($this->calc_quin)?$this->calc_quin:"null").",";
		$sql.= " print=".(isset($this->print)?$this->print:"null").",";
		$sql.= " fk_codfol=".(isset($this->fk_codfol)?$this->fk_codfol:"null").",";
		$sql.= " income_tax=".(isset($this->income_tax)?$this->income_tax:"null").",";
		$sql.= " percent=".(isset($this->percent)?$this->percent:"null")."";

        
        $sql.= " WHERE rowid=".$this->id;

		$this->db->begin();

		dol_syslog(get_class($this)."::update sql=".$sql, LOG_DEBUG);
        $resql = $this->db->query($sql);
    	if (! $resql) { $error++; $this->errors[]="Error ".$this->db->lasterror(); }

		if (! $error)
		{
			if (! $notrigger)
			{
	            // Uncomment this and change MYOBJECT to your own tag if you
	            // want this action calls a trigger.

	            //// Call triggers
	            //include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';
	            //$interface=new Interfaces($this->db);
	            //$result=$interface->run_triggers('MYOBJECT_MODIFY',$this,$user,$langs,$conf);
	            //if ($result < 0) { $error++; $this->errors=$interface->errors; }
	            //// End call triggers
	    	}
		}

        // Commit or rollback
		if ($error)
		{
			foreach($this->errors as $errmsg)
			{
	            dol_syslog(get_class($this)."::update ".$errmsg, LOG_ERR);
	            $this->error.=($this->error?', '.$errmsg:$errmsg);
			}
			$this->db->rollback();
			return -1*$error;
		}
		else
		{
			$this->db->commit();
			return 1;
		}
    }


 	/**
	 *  Delete object in database
	 *
     *	@param  User	$user        User that deletes
     *  @param  int		$notrigger	 0=launch triggers after, 1=disable triggers
	 *  @return	int					 <0 if KO, >0 if OK
	 */
	function delete($user, $notrigger=0)
	{
		global $conf, $langs;
		$error=0;

		$this->db->begin();

		if (! $error)
		{
			if (! $notrigger)
			{
				// Uncomment this and change MYOBJECT to your own tag if you
		        // want this action calls a trigger.

		        //// Call triggers
		        //include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';
		        //$interface=new Interfaces($this->db);
		        //$result=$interface->run_triggers('MYOBJECT_DELETE',$this,$user,$langs,$conf);
		        //if ($result < 0) { $error++; $this->errors=$interface->errors; }
		        //// End call triggers
			}
		}

		if (! $error)
		{
    		$sql = "DELETE FROM ".MAIN_DB_PREFIX."p_concept";
    		$sql.= " WHERE rowid=".$this->id;

    		dol_syslog(get_class($this)."::delete sql=".$sql);
    		$resql = $this->db->query($sql);
        	if (! $resql) { $error++; $this->errors[]="Error ".$this->db->lasterror(); }
		}

        // Commit or rollback
		if ($error)
		{
			foreach($this->errors as $errmsg)
			{
	            dol_syslog(get_class($this)."::delete ".$errmsg, LOG_ERR);
	            $this->error.=($this->error?', '.$errmsg:$errmsg);
			}
			$this->db->rollback();
			return -1*$error;
		}
		else
		{
			$this->db->commit();
			return 1;
		}
	}



	/**
	 *	Load an object from its id and create a new one in database
	 *
	 *	@param	int		$fromid     Id of object to clone
	 * 	@return	int					New id of clone
	 */
	function createFromClone($fromid)
	{
		global $user,$langs;

		$error=0;

		$object=new Pconcept($this->db);

		$this->db->begin();

		// Load source object
		$object->fetch($fromid);
		$object->id=0;
		$object->statut=0;

		// Clear fields
		// ...

		// Create clone
		$result=$object->create($user);

		// Other options
		if ($result < 0)
		{
			$this->error=$object->error;
			$error++;
		}

		if (! $error)
		{


		}

		// End
		if (! $error)
		{
			$this->db->commit();
			return $object->id;
		}
		else
		{
			$this->db->rollback();
			return -1;
		}
	}


	/**
	 *	Initialise object with example values
	 *	Id must be 0 if object instance is a specimen
	 *
	 *	@return	void
	 */
	function initAsSpecimen()
	{
		$this->id=0;
		
		$this->ref='';
		$this->detail='';
		$this->details='';
		$this->type_cod='';
		$this->type_mov='';
		$this->fk_formula='';
		$this->calc_oblig='';
		$this->calc_afp='';
		$this->calc_rciva='';
		$this->calc_agui='';
		$this->calc_vac='';
		$this->calc_indem='';
		$this->calc_afpvejez='';
		$this->calc_contrpat='';
		$this->calc_afpriesgo='';
		$this->calc_aportsol='';
		$this->calc_quin='';
		$this->print='';
		$this->fk_codfol='';
		$this->income_tax='';
		$this->percent='';

		
	}

    /**
     *  Return combo list of activated countries, into language of user
     *
     *  @param	string	$selected       Id or Code or Label of preselected country
     *  @param  string	$htmlname       Name of html select object
     *  @param  string	$htmloption     Options html on select object
     *  @param	string	$maxlength		Max length for labels (0=no limit)
     *  @return string           		HTML string with select
     */
	function select_concept($selected='',$htmlname='fk_concept',$htmloption='',$maxlength=0,$showempty=0,$filter="")
    {
        global $conf,$langs;
        $langs->load("salary@salary");

        $out='';
        $countryArray=array();
        $label=array();

        $sql = "SELECT c.rowid, c.ref as code_iso, c.detail as label";
        $sql.= " FROM ".MAIN_DB_PREFIX."p_concept AS c ";
	$sql.= " INNER JOIN ".MAIN_DB_PREFIX."p_type_fol AS d ON c.fk_codfol = d.rowid ";
        $sql.= " WHERE d.entity = ".$conf->entity;
	If (!empty($filter))
	    $sql.= " AND ".$filter;
        $sql.= " ORDER BY c.ref ASC";

        dol_syslog(get_class($this)."::select_concept sql=".$sql);
        $resql=$this->db->query($sql);
        if ($resql)
        {
	    $out = select_generic($resql,$showempty,$htmlname,$htmloption,'Concept',$selected);
        }
        else
        {
            dol_print_error($this->db);
        }

        return $out;
    }

}
?>
