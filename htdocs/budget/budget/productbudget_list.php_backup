<?php
/* Copyright (C) 2007-2015 Laurent Destailleur  <eldy@users.sourceforge.net>
 * Copyright (C) ---Put here your own copyright and developer email---
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *   	\file       budget/productbudget_list.php
 *		\ingroup    budget
 *		\brief      This file is an example of a php page
 *					Initialy built by build_class_from_table on 2016-10-26 15:47
 */

//if (! defined('NOREQUIREUSER'))  define('NOREQUIREUSER','1');
//if (! defined('NOREQUIREDB'))    define('NOREQUIREDB','1');
//if (! defined('NOREQUIRESOC'))   define('NOREQUIRESOC','1');
//if (! defined('NOREQUIRETRAN'))  define('NOREQUIRETRAN','1');
//if (! defined('NOCSRFCHECK'))    define('NOCSRFCHECK','1');			// Do not check anti CSRF attack test
//if (! defined('NOSTYLECHECK'))   define('NOSTYLECHECK','1');			// Do not check style html tag into posted data
//if (! defined('NOTOKENRENEWAL')) define('NOTOKENRENEWAL','1');		// Do not check anti POST attack test
//if (! defined('NOREQUIREMENU'))  define('NOREQUIREMENU','1');			// If there is no need to load and show top and left menu
//if (! defined('NOREQUIREHTML'))  define('NOREQUIREHTML','1');			// If we don't need to load the html.form.class.php
//if (! defined('NOREQUIREAJAX'))  define('NOREQUIREAJAX','1');
//if (! defined("NOLOGIN"))        define("NOLOGIN",'1');				// If this page is public (can be called outside logged session)

// Change this following line to use the correct relative path (../, ../../, etc)
//dol_include_once('/budget/class/productbudgetext.class.php');

// Load traductions files requiredby by page


$search_fk_product=GETPOST('search_fk_product','int');
$search_fk_budget=GETPOST('search_fk_budget','int');
$search_ref=GETPOST('search_ref','alpha');
$search_label=GETPOST('search_label','alpha');
$search_fk_unit=GETPOST('search_fk_unit','int');
$search_code_structure=GETPOST('search_code_structure','alpha');
$search_quant=GETPOST('search_quant','alpha');
$search_amount=GETPOST('search_amount','alpha');
$search_fk_user_create=GETPOST('search_fk_user_create','int');
$search_fk_user_mod=GETPOST('search_fk_user_mod','int');
$search_status=GETPOST('search_status','int');


$search_myfield=GETPOST('search_myfield');
$optioncss = GETPOST('optioncss','alpha');

// Load variable for pagination
$limit = GETPOST("limit")?GETPOST("limit","int"):$conf->liste_limit;
$sortfield = GETPOST('sortfield','alpha');
$sortorder = GETPOST('sortorder','alpha');
$page = GETPOST('page','int');

if (empty($page) || $page == -1) { $page = 0; }
$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;
if (! $sortfield) $sortfield="t.code_structure, t.ref";
// Set here default search field
if (! $sortorder) $sortorder="ASC";

// Protection if external user
$socid=0;
if ($user->societe_id > 0)
{
	$socid = $user->societe_id;
	//accessforbidden();
}

// Initialize technical object to manage hooks. Note that conf->hooks_modules contains array
$hookmanager->initHooks(array('productbudgetlist'));
$extrafields = new ExtraFields($db);

// fetch optionals attributes and labels
$extralabels = $extrafields->fetch_name_optionals_label('budget');
$search_array_options=$extrafields->getOptionalsFromPost($extralabels,'','search_');

// Load object if id or ref is provided as parameter
// Definition of fields for list
$arrayfields=array(

	't.fk_product'=>array('label'=>$langs->trans("Fieldfk_product"), 'checked'=>1),
	't.fk_budget'=>array('label'=>$langs->trans("Fieldfk_budget"), 'checked'=>0),
	't.ref'=>array('label'=>$langs->trans("Fieldref"), 'checked'=>1),
	't.label'=>array('label'=>$langs->trans("Fieldlabel"), 'checked'=>1),
	't.fk_unit'=>array('label'=>$langs->trans("Fieldfk_unit"), 'checked'=>1),
	't.code_structure'=>array('label'=>$langs->trans("Fieldcode_structure"), 'checked'=>1),
	't.quant'=>array('label'=>$langs->trans("Fieldquant"), 'checked'=>0),
	't.amount'=>array('label'=>$langs->trans("Fieldamount"), 'checked'=>1),
	't.fk_user_create'=>array('label'=>$langs->trans("Fieldfk_user_create"), 'checked'=>0),
	't.fk_user_mod'=>array('label'=>$langs->trans("Fieldfk_user_mod"), 'checked'=>0),
	't.status'=>array('label'=>$langs->trans("Fieldstatus"), 'checked'=>1),


    //'t.entity'=>array('label'=>$langs->trans("Entity"), 'checked'=>1, 'enabled'=>(! empty($conf->multicompany->enabled) && empty($conf->multicompany->transverse_mode))),
	't.datec'=>array('label'=>$langs->trans("DateCreationShort"), 'checked'=>0, 'position'=>500),
	't.tms'=>array('label'=>$langs->trans("DateModificationShort"), 'checked'=>0, 'position'=>500),
    //'t.statut'=>array('label'=>$langs->trans("Status"), 'checked'=>1, 'position'=>1000),
	);
// Extra fields
if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))
{
	foreach($extrafields->attribute_label as $key => $val)
	{
		$arrayfields["ef.".$key]=array('label'=>$extrafields->attribute_label[$key], 'checked'=>$extrafields->attribute_list[$key], 'position'=>$extrafields->attribute_pos[$key], 'enabled'=>$extrafields->attribute_perms[$key]);
	}
}




/*******************************************************************
* ACTIONS
*
* Put here all code to do according to value of "action" parameter
********************************************************************/

if (GETPOST('cancel')) { $action='list'; $massaction=''; }
if (! GETPOST('confirmmassaction')) { $massaction=''; }

$parameters=array();
$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $objectbtr may have been modified by some hooks
if ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');

include DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';

if (GETPOST("button_removefilter_x") || GETPOST("button_removefilter.x") ||GETPOST("button_removefilter")) // All test are required to be compatible with all browsers
{

	$search_fk_product='';
	$search_fk_budget='';
	$search_ref='';
	$search_label='';
	$search_fk_unit='';
	$search_code_structure='';
	$search_quant='';
	$search_amount='';
	$search_fk_user_create='';
	$search_fk_user_mod='';
	$search_status='';


	$search_date_creation='';
	$search_date_update='';
	$search_array_options=array();
}


if (empty($reshook))
{
    // Mass actions. Controls on number of lines checked
	$maxformassaction=1000;
	if (! empty($massaction) && count($toselect) < 1)
	{
		$error++;
		setEventMessages($langs->trans("NoLineChecked"), null, "warnings");
	}
	// Action to delete
	if ($action == 'confirm_delete')
	{
		$result=$objectbtr->delete($user);
		if ($result > 0)
		{
			// Delete OK
			setEventMessages("RecordDeleted", null, 'mesgs');
			header("Location: ".dol_buildpath('/budget/budget/producbudget_list.php',1));
			exit;
		}
		else
		{
			if (! empty($objectbtr->errors)) setEventMessages(null,$objectbtr->errors,'errors');
			else setEventMessages($objectbtr->error,null,'errors');
		}
	}
}




/***************************************************
* VIEW
*
* Put here all code to build page
****************************************************/

$now=dol_now();


// Put here content of your page

// Example : Adding jquery code

$sql = "SELECT";
$sql.= " t.rowid,";

$sql .= " t.fk_product,";
$sql .= " t.fk_budget,";
$sql .= " t.ref,";
$sql .= " t.label,";
$sql .= " t.fk_unit,";
$sql .= " t.code_structure,";
$sql .= " t.quant,";
$sql .= " t.amount,";
$sql .= " t.fk_user_create,";
$sql .= " t.fk_user_mod,";
$sql .= " t.date_create,";
$sql .= " t.date_mod,";
$sql .= " t.tms,";
$sql .= " t.status";

$sql .= " , c.label AS labelcategorie";

// Add fields for extrafields
foreach ($extrafields->attribute_list as $key => $val) $sql.=",ef.".$key.' as options_'.$key;
// Add fields from hooks
$parameters=array();
$reshook=$hookmanager->executeHooks('printFieldListSelect',$parameters);    // Note that $action and $objectbtr may have been modified by hook
$sql.=$hookmanager->resPrint;
$sql.= " FROM ".MAIN_DB_PREFIX."product_budget as t";
if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label)) $sql.= " LEFT JOIN ".MAIN_DB_PREFIX."product_budget_extrafields as ef on (u.rowid = ef.fk_object)";
$sql.= " LEFT JOIN ".MAIN_DB_PREFIX."categorie AS c ON t.code_structure = c.rowid";
$sql.= " WHERE 1 = 1";
//$sql.= " WHERE u.entity IN (".getEntity('mytable',1).")";
$sql.= " AND t.fk_budget = ".$object->id;
if ($search_fk_product) $sql.= natural_search("fk_product",$search_fk_product);
if ($search_fk_budget) $sql.= natural_search("fk_budget",$search_fk_budget);
if ($search_ref) $sql.= natural_search("ref",$search_ref);
if ($search_label) $sql.= natural_search("t.label",$search_label);
if ($search_fk_unit) $sql.= natural_search("fk_unit",$search_fk_unit);
if ($search_code_structure) $sql.= natural_search("c.label",$search_code_structure);
if ($search_quant) $sql.= natural_search("quant",$search_quant);
if ($search_amount) $sql.= natural_search("amount",$search_amount);
if ($search_fk_user_create) $sql.= natural_search("fk_user_create",$search_fk_user_create);
if ($search_fk_user_mod) $sql.= natural_search("fk_user_mod",$search_fk_user_mod);
if ($search_status) $sql.= natural_search("status",$search_status);


if ($sall)          $sql.= natural_search(array_keys($fieldstosearchall), $sall);
// Add where from extra fields
foreach ($search_array_options as $key => $val)
{
	$crit=$val;
	$tmpkey=preg_replace('/search_options_/','',$key);
	$typ=$extrafields->attribute_type[$tmpkey];
	$mode=0;
    if (in_array($typ, array('int','double'))) $mode=1;    // Search on a numeric
    if ($val && ( ($crit != '' && ! in_array($typ, array('select'))) || ! empty($crit)))
    {
    	$sql .= natural_search('ef.'.$tmpkey, $crit, $mode);
    }
}
// Add where from hooks
$parameters=array();
$reshook=$hookmanager->executeHooks('printFieldListWhere',$parameters);    // Note that $action and $object may have been modified by hook
$sql.=$hookmanager->resPrint;
$sql.=$db->order($sortfield,$sortorder);
//$sql.= $db->plimit($conf->liste_limit+1, $offset);
// Count total nb of records
$nbtotalofrecords = 0;
if (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST))
{
	$result = $db->query($sql);
	$nbtotalofrecords = $db->num_rows($result);
}
$sql.= $db->plimit($limit+1, $offset);
dol_syslog($script_file, LOG_DEBUG);
$resql=$db->query($sql);

if ($resql)
{
	$num = $db->num_rows($resql);

	$params='';
	if ($limit > 0 && $limit != $conf->liste_limit) $params.='&limit='.$limit;
	if ($id) $params.='&id='.$id;
	$params.= '&action='.$action;
	if ($search_fk_product != '') $params.= '&amp;search_fk_product='.urlencode($search_fk_product);
	if ($search_fk_budget != '') $params.= '&amp;search_fk_budget='.urlencode($search_fk_budget);
	if ($search_ref != '') $params.= '&amp;search_ref='.urlencode($search_ref);
	if ($search_label != '') $params.= '&amp;search_label='.urlencode($search_label);
	if ($search_fk_unit != '') $params.= '&amp;search_fk_unit='.urlencode($search_fk_unit);
	if ($search_code_structure != '') $params.= '&amp;search_code_structure='.urlencode($search_code_structure);
	if ($search_quant != '') $params.= '&amp;search_quant='.urlencode($search_quant);
	if ($search_amount != '') $params.= '&amp;search_amount='.urlencode($search_amount);
	if ($search_fk_user_create != '') $params.= '&amp;search_fk_user_create='.urlencode($search_fk_user_create);
	if ($search_fk_user_mod != '') $params.= '&amp;search_fk_user_mod='.urlencode($search_fk_user_mod);
	if ($search_status != '') $params.= '&amp;search_status='.urlencode($search_status);


	if ($optioncss != '') $param.='&optioncss='.$optioncss;
    // Add $param from extra fields
	foreach ($search_array_options as $key => $val)
	{
		$crit=$val;
		$tmpkey=preg_replace('/search_options_/','',$key);
		if ($val != '') $param.='&search_options_'.$tmpkey.'='.urlencode($val);
	}

	print '<form method="POST" id="searchFormList" action="'.$_SERVER["PHP_SELF"].'">';
	if ($optioncss != '') print '<input type="hidden" name="optioncss" value="'.$optioncss.'">';
	print '<input type="hidden" name="token" value="'.$_SESSION['newtoken'].'">';
	print '<input type="hidden" name="formfilteraction" id="formfilteraction" value="list">';
	print '<input type="hidden" name="action" value="viewre">';
	print '<input type="hidden" name="sortfield" value="'.$sortfield.'">';
	print '<input type="hidden" name="sortorder" value="'.$sortorder.'">';
	print '<input type="hidden" name="id" value="'.$id.'">';

	print_barre_liste($title, $page, $_SERVER["PHP_SELF"], $params, $sortfield, $sortorder, '', $num, $nbtotalofrecords, 'title_companies', 0, '', '', $limit);

	if ($sall)
	{
		foreach($fieldstosearchall as $key => $val) $fieldstosearchall[$key]=$langs->trans($val);
		print $langs->trans("FilterOnInto", $all) . join(', ',$fieldstosearchall);
	}

	$moreforfilter = '';
	//$moreforfilter.='<div class="divsearchfield">';
	//$moreforfilter.= $langs->trans('MyFilter') . ': <input type="text" name="search_myfield" value="'.dol_escape_htmltag($search_myfield).'">';
	//$moreforfilter.= '</div>';

	if (! empty($moreforfilter))
	{
		print '<div class="liste_titre liste_titre_bydiv centpercent">';
		print $moreforfilter;
		$parameters=array();
    	$reshook=$hookmanager->executeHooks('printFieldPreListTitle',$parameters);    // Note that $action and $object may have been modified by hook
    	print $hookmanager->resPrint;
    	print '</div>';
    }

    $varpage=empty($contextpage)?$_SERVER["PHP_SELF"]:$contextpage;
    $selectedfields=$form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage);	// This also change content of $arrayfields

    print '<table class="liste '.($moreforfilter?"listwithfilterbefore":"").'">';

    // Fields title
    print '<tr class="liste_titre">';
    //
    if (! empty($arrayfields['t.fk_product']['checked'])) print_liste_field_titre($arrayfields['t.fk_product']['label'],$_SERVER['PHP_SELF'],'t.fk_product','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.fk_budget']['checked'])) print_liste_field_titre($arrayfields['t.fk_budget']['label'],$_SERVER['PHP_SELF'],'t.fk_budget','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.ref']['checked'])) print_liste_field_titre($arrayfields['t.ref']['label'],$_SERVER['PHP_SELF'],'t.ref','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.label']['checked'])) print_liste_field_titre($arrayfields['t.label']['label'],$_SERVER['PHP_SELF'],'t.label','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.fk_unit']['checked'])) print_liste_field_titre($arrayfields['t.fk_unit']['label'],$_SERVER['PHP_SELF'],'t.fk_unit','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.code_structure']['checked'])) print_liste_field_titre($arrayfields['t.code_structure']['label'],$_SERVER['PHP_SELF'],'t.code_structure','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.quant']['checked'])) print_liste_field_titre($arrayfields['t.quant']['label'],$_SERVER['PHP_SELF'],'t.quant','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.amount']['checked'])) print_liste_field_titre($arrayfields['t.amount']['label'],$_SERVER['PHP_SELF'],'t.amount','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.fk_user_create']['checked'])) print_liste_field_titre($arrayfields['t.fk_user_create']['label'],$_SERVER['PHP_SELF'],'t.fk_user_create','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.fk_user_mod']['checked'])) print_liste_field_titre($arrayfields['t.fk_user_mod']['label'],$_SERVER['PHP_SELF'],'t.fk_user_mod','',$params,'',$sortfield,$sortorder);
    if (! empty($arrayfields['t.status']['checked'])) print_liste_field_titre($arrayfields['t.status']['label'],$_SERVER['PHP_SELF'],'t.status','',$params,'',$sortfield,$sortorder);

    //if (! empty($arrayfields['t.field1']['checked'])) print_liste_field_titre($arrayfields['t.field1']['label'],$_SERVER['PHP_SELF'],'t.field1','',$params,'',$sortfield,$sortorder);
    //if (! empty($arrayfields['t.field2']['checked'])) print_liste_field_titre($arrayfields['t.field2']['label'],$_SERVER['PHP_SELF'],'t.field2','',$params,'',$sortfield,$sortorder);
	// Extra fields
    if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))
    {
    	foreach($extrafields->attribute_label as $key => $val)
    	{
    		if (! empty($arrayfields["ef.".$key]['checked']))
    		{
    			$align=$extrafields->getAlignFlag($key);
    			print_liste_field_titre($extralabels[$key],$_SERVER["PHP_SELF"],"ef.".$key,"",$param,($align?'align="'.$align.'"':''),$sortfield,$sortorder);
    		}
    	}
    }

    // Hook fields
    $parameters=array('arrayfields'=>$arrayfields);
    $reshook=$hookmanager->executeHooks('printFieldListTitle',$parameters);    // Note that $action and $object may have been modified by hook
    print $hookmanager->resPrint;
    if (! empty($arrayfields['t.datec']['checked']))  print_liste_field_titre($arrayfields['t.datec']['label'],$_SERVER["PHP_SELF"],"t.datec","",$param,'align="center" class="nowrap"',$sortfield,$sortorder);
    if (! empty($arrayfields['t.tms']['checked']))    print_liste_field_titre($arrayfields['t.tms']['label'],$_SERVER["PHP_SELF"],"t.tms","",$param,'align="center" class="nowrap"',$sortfield,$sortorder);
	//if (! empty($arrayfields['t.status']['checked'])) print_liste_field_titre($langs->trans("Status"),$_SERVER["PHP_SELF"],"t.status","",$param,'align="center"',$sortfield,$sortorder);
    print_liste_field_titre($selectedfields, $_SERVER["PHP_SELF"],"",'','','align="right"',$sortfield,$sortorder,'maxwidthsearch ');
    print '</tr>'."\n";

    // Fields title search
    print '<tr class="liste_titre">';
	//
    if (! empty($arrayfields['t.fk_product']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_fk_product" value="'.$search_fk_product.'" size="10"></td>';
    if (! empty($arrayfields['t.fk_budget']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_fk_budget" value="'.$search_fk_budget.'" size="10"></td>';
    if (! empty($arrayfields['t.ref']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_ref" value="'.$search_ref.'" size="10"></td>';
    if (! empty($arrayfields['t.label']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_label" value="'.$search_label.'" size="10"></td>';
    if (! empty($arrayfields['t.fk_unit']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_fk_unit" value="'.$search_fk_unit.'" size="10"></td>';
    if (! empty($arrayfields['t.code_structure']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_code_structure" value="'.$search_code_structure.'" size="10"></td>';
    if (! empty($arrayfields['t.quant']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_quant" value="'.$search_quant.'" size="10"></td>';
    if (! empty($arrayfields['t.amount']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_amount" value="'.$search_amount.'" size="10"></td>';
    if (! empty($arrayfields['t.fk_user_create']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_fk_user_create" value="'.$search_fk_user_create.'" size="10"></td>';
    if (! empty($arrayfields['t.fk_user_mod']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_fk_user_mod" value="'.$search_fk_user_mod.'" size="10"></td>';
    if (! empty($arrayfields['t.status']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_status" value="'.$search_status.'" size="10"></td>';

	//if (! empty($arrayfields['t.field1']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_field1" value="'.$search_field1.'" size="10"></td>';
	//if (! empty($arrayfields['t.field2']['checked'])) print '<td class="liste_titre"><input type="text" class="flat" name="search_field2" value="'.$search_field2.'" size="10"></td>';
	// Extra fields
    if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))
    {
    	foreach($extrafields->attribute_label as $key => $val)
    	{
    		if (! empty($arrayfields["ef.".$key]['checked']))
    		{
    			$align=$extrafields->getAlignFlag($key);
    			$typeofextrafield=$extrafields->attribute_type[$key];
    			print '<td class="liste_titre'.($align?' '.$align:'').'">';
    			if (in_array($typeofextrafield, array('varchar', 'int', 'double', 'select')))
    			{
    				$crit=$val;
    				$tmpkey=preg_replace('/search_options_/','',$key);
    				$searchclass='';
    				if (in_array($typeofextrafield, array('varchar', 'select'))) $searchclass='searchstring';
    				if (in_array($typeofextrafield, array('int', 'double'))) $searchclass='searchnum';
    				print '<input class="flat'.($searchclass?' '.$searchclass:'').'" size="4" type="text" name="search_options_'.$tmpkey.'" value="'.dol_escape_htmltag($search_array_options['search_options_'.$tmpkey]).'">';
    			}
    			print '</td>';
    		}
    	}
    }
    // Fields from hook
    $parameters=array('arrayfields'=>$arrayfields);
    $reshook=$hookmanager->executeHooks('printFieldListOption',$parameters);    // Note that $action and $object may have been modified by hook
    print $hookmanager->resPrint;
    if (! empty($arrayfields['t.datec']['checked']))
    {
        // Date creation
    	print '<td class="liste_titre">';
    	print '</td>';
    }
    if (! empty($arrayfields['t.tms']['checked']))
    {
        // Date modification
    	print '<td class="liste_titre">';
    	print '</td>';
    }
    /*if (! empty($arrayfields['u.statut']['checked']))
    {
        // Status
        print '<td class="liste_titre" align="center">';
        print $form->selectarray('search_statut', array('-1'=>'','0'=>$langs->trans('Disabled'),'1'=>$langs->trans('Enabled')),$search_statut);
        print '</td>';
    }*/
    // Action column
    print '<td class="liste_titre" align="right">';
    $searchpitco=$form->showFilterAndCheckAddButtons(0);
    print $searchpitco;
    print '</td>';
    print '</tr>'."\n";

    $i=0;
    $var=true;
    $totalarray=array();
    while ($i < min($num, $limit))
    {
    	$obj = $db->fetch_object($resql);
    	if ($obj)
    	{
    		$objprodb->fetch($obj->rowid);
    		$var = !$var;
    		if($obj->fk_product>0)
    			$product->fetch($obj->fk_product);
            // Show here line of result

        if($aStrbudget[$object->id]['aStrcatgroup'][$obj->code_structure] == 'MA' && !empty($color_ma))
            print '<tr bgcolor="'.$color_ma.'">';
        elseif($aStrbudget[$object->id]['aStrcatgroup'][$obj->code_structure] == 'MO' && !empty($color_mo))
            print '<tr bgcolor="'.$color_mo.'">';
        elseif($aStrbudget[$object->id]['aStrcatgroup'][$obj->code_structure] == 'MQ' && !empty($color_mq))
            print '<tr bgcolor="'.$color_mq.'">';
        else
            print '<tr '.$bc[$var].'>';
            // LIST_OF_TD_FIELDS_LIST

    		if (! empty($arrayfields['t.fk_product']['checked']))
    		{
    			print '<td>'.($obj->fk_product>0?$product->getNomUrl(1):'').'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.fk_budget']['checked']))
    		{
    			print '<td>'.$object->getNomUrl().'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.ref']['checked']))
    		{
    			print '<td>'.$objprodb->getNomUrl(1).'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.label']['checked']))
    		{
    			print '<td>'.$obj->label.'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.fk_unit']['checked']))
    		{
    			print '<td>'.$objprodb->getLabelOfUnit().'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.code_structure']['checked']))
    		{
    			print '<td>'.$obj->labelcategorie.'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.amount']['checked']))
    		{
    			print '<td align="right">'.price2num($obj->amount,'MU').'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.fk_user_create']['checked']))
    		{
    			$objuser->fetch($obj->fk_user_create);
    			print '<td>'.$objuser->getNomUrl(1).'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.fk_user_mod']['checked']))
    		{
    			$objuser->fetch($obj->fk_user_mod);
    			print '<td>'.$objuser->getNomUrl(1).'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
    		if (! empty($arrayfields['t.status']['checked']))
    		{
    			print '<td align="center">'.$objprodb->getLibStatut(1).'</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}

        	// Extra fields
    		if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))
    		{
    			foreach($extrafields->attribute_label as $key => $val)
    			{
    				if (! empty($arrayfields["ef.".$key]['checked']))
    				{
    					print '<td';
    					$align=$extrafields->getAlignFlag($key);
    					if ($align) print ' align="'.$align.'"';
    					print '>';
    					$tmpkey='options_'.$key;
    					print $extrafields->showOutputField($key, $obj->$tmpkey, '', 1);
    					print '</td>';
    					if (! $i) $totalarray['nbfield']++;
    				}
    			}
    		}
            // Fields from hook
    		$parameters=array('arrayfields'=>$arrayfields, 'obj'=>$obj);
    		$reshook=$hookmanager->executeHooks('printFieldListValue',$parameters);    // Note that $action and $object may have been modified by hook
    		print $hookmanager->resPrint;
        	// Date creation
    		if (! empty($arrayfields['t.datec']['checked']))
    		{
    			print '<td align="center">';
    			print dol_print_date($db->jdate($obj->date_creation), 'dayhour');
    			print '</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
            // Date modification
    		if (! empty($arrayfields['t.tms']['checked']))
    		{
    			print '<td align="center">';
    			print dol_print_date($db->jdate($obj->date_update), 'dayhour');
    			print '</td>';
    			if (! $i) $totalarray['nbfield']++;
    		}
            // Action column
    		print '<td></td>';
    		if (! $i) $totalarray['nbfield']++;

    		print '</tr>';
    	}
    	$i++;
    }

    $db->free($resql);

    $parameters=array('sql' => $sql);
    $reshook=$hookmanager->executeHooks('printFieldListFooter',$parameters);
	 // Note that $action and $object may have been modified by hook
    print $hookmanager->resPrint;

    print "</table>\n";
    print "</form>\n";


    //armamos boton apra importar recursos
    print '<a data-toggle="modal" href="#addresource" class="butAction">'.$langs->trans('Importtobudget').'</a>';

    print '<div id="addresource" class="modal modal-wide fade " style="display: none;">';

    print '<div class="modal-dialog">';

    print '<div class="modal-content">';
    print '<form id="formidr" name="formidr"  action="'.DOL_URL_ROOT.'/budget/budget/card.php'.'" method="POST">';
    print '<input type="hidden" name="id" value="'.$id.'">';
    print '<input type="hidden" name="token" value="'.$_SESSION['newtoken'].'">';
    print '<input type="hidden" name="action" value="import_resource">';

    print '<div class="modal-header">';
    print '<a data-dismiss="modal" class="close">×</a>';
    print '<h3>'.$langs->trans('Presupuestos').'</h3>';
    print '</div>';
    print '<div class="modal-body">';
    include DOL_DOCUMENT_ROOT.'/budget/tpl/import_resource.tpl.php';
    print '</div>';
    print '<div class="modal-footer">';
    print '<input type="submit" class="btn btn-success" value="'.$langs->trans('Import').'"/>';
    print '<a href="#" data-dismiss="modal" class="btn">Cerrar</a>';
    print '</div>';

    print '</form>';
    print '</div>';

    print '</div>';

    print '</div>';


    //armamos boton apra importar recursos
    print '<a data-toggle="modal" href="#addproduct" class="butAction">'.$langs->trans('Importtoproduct').'</a>';

    print '<div id="addproduct" class="modal modal-wide fade " style="display: none;">';

    print '<div class="modal-dialog">';

    print '<div class="modal-content">';
    print '<form id="formid" name="formid" action="'.DOL_URL_ROOT.'/budget/budget/card.php'.'" method="POST">';
    print '<input type="hidden" name="id" value="'.$id.'">';
    print '<input type="hidden" name="token" value="'.$_SESSION['newtoken'].'">';
    print '<input type="hidden" name="action" value="import_product">';

    print '<div class="modal-header">';
    print '<a data-dismiss="modal" class="close">×</a>';
    print '<h3>'.$langs->trans('Productos').'</h3>';
    print '</div>';
    print '<div class="modal-body">';
    include DOL_DOCUMENT_ROOT.'/budget/tpl/import_product.tpl.php';
    print '</div>';
    print '<div class="modal-footer">';
    print '<input type="submit" class="btn btn-success" value="'.$langs->trans('Import').'"/>';
    print '<a href="#" data-dismiss="modal" class="btn">Cerrar</a>';
    print '</div>';

    print '</form>';
    print '</div>';

    print '</div>';

    print '</div>';

}
else
{
	$error++;
	dol_print_error($db);
}

